;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.6
;Automatic Program Generator
;© Copyright 1998-2012 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : SOUND LEVEL METTER
;Version : 3
;Date    : 3/2/2014
;Author  : Cracked By PerTic@n (Evaluation)V1.0 - SonSivRi.to
;Company : SPKT
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;/*Khai bao thu vien su dung*/
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <stdio.h>
;
;#ifndef RXB8
;#define RXB8 1
;#endif
;
;#ifndef TXB8
;#define TXB8 0
;#endif
;
;#ifndef UPE
;#define UPE 2
;#endif
;
;#ifndef DOR
;#define DOR 3
;#endif
;
;#ifndef FE
;#define FE 4
;#endif
;
;#ifndef UDRE
;#define UDRE 5
;#endif
;
;#ifndef RXC
;#define RXC 7
;#endif
;
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<DOR)
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;
;// Standard Input/Output functions
;#define ADC_VREF_TYPE 0x00
;#include <KhaiBao.c>
;#define  LATCH  PINB.2       //nut nhan LATCH
;#define  UP  PIND.2       //nut nhan UP
;#define  DOWN PIND.3
;#define  MODE  PINB.1        //nut nhan cai dat che do
;
;flash unsigned char character_0[]={0x0e,0x0e,0x0e,0x0e,0x0e,0x0e,0x0e,0x0e};
;bit latch_old, mode_old, up_old, down_old;
;bit tt=0,connect=0;                      //bit trang thai cho LATCH
;unsigned long adc_value;     //bien luu gia tri adc
;unsigned long db_value;      //bien luu gia tri da tinh toan ra dB
;unsigned char bien_edit_db_value=140;// bien_baud=2;    // bien MaxValue vaf bieen Baud Rate
;char data=' ';                                          // bien data luu tam ky tu nhan duoc tu may tinh
;unsigned int edit_db_value1,i;
;unsigned int bien_delay=4;
;int delay,luu_delay=0,x=0;     \
;unsigned char bien_mode=0;
;unsigned int ng, tr, ch, dv;       // Dung cho gia tri dB
;unsigned int Tram, Chuc, Donvi;  // Dung cho Delay edit_db_value
;unsigned char truyen_data=0;
;unsigned char truyen_delay=73; //truyen ky tu len pc

	.DSEG
;
;//KHAI BAO CHUONG TRINH CON SU DUNG
;unsigned int read_adc(unsigned char adc_input);
;#include <InterruptUSART.c>
;//=================================================
;//NHAN DATA
;//=================================================
;//USART Receiver buffer
;#define RX_BUFFER_SIZE 8
;char rx_buffer[RX_BUFFER_SIZE];
;
;#if RX_BUFFER_SIZE <256
;unsigned char rx_wr_index, rx_counter; //rx_rd_index,
;#else
;unsigned int rx_wr_index,rx_counter;     // rx_rd_index,
;#endif
;
;bit rx_buffer_overflow;
;
;//USART Receiver interrupt service routine
;interrupt [USART_RXC] void usart_rx_isr(void)
; 0000 0045 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;    char status;
;    status = UCSRA;
;PCODE: $0000000F VOL: 0
;	status -> R17
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;    data = UDR;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;    if ((status & (FRAMING_ERROR|PARITY_ERROR|DATA_OVERRUN )) ==0)
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;    {
;      rx_buffer[rx_wr_index]=data;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;      if(++ rx_wr_index == RX_BUFFER_SIZE) rx_wr_index =0;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;      if(++ rx_counter == RX_BUFFER_SIZE)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;      {
;        rx_counter = 0;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;        rx_buffer_overflow =1;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;      }
;    }
;PCODE: $0000002D VOL: 0
;}
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;
;//#ifndef _DEBUG_TERMINAL_IO_
;////Get a character from USART Receiver buffer
;//#define _ALTERNATE_GETCHAR_
;//#pragma used+
;//char getchar(void)
;//{
;//  char data;
;//  while (rx_counter ==0);
;//  data = rx_buffer[rx_rd_index];
;//  if (++rx_rd_index == RX_BUFFER_SIZE) rx_rd_index = 0;
;//  #asm("cli")
;//  --rx_counter;
;//  #asm("sei")
;//  return data;
;//}
;//
;//#pragma used-
;//#endif
;
;//==================================================
;//TRUYEN DATA
;//==================================================
;//USART Transmitter buffer
;#define TX_BUFFER_SIZE 8
;char tx_buffer[TX_BUFFER_SIZE];
;
;#if TX_BUFFER_SIZE <256
;unsigned char tx_wr_index, tx_rd_index,tx_counter;
;#else
;unsigned int tx_wr_index, tx_rd_index,tx_counter;
;#endif
;
;//USART Transmitter interrupt service routine
;interrupt [USART_TXC] void usart_tx_isr(void)
;{
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;  if (tx_counter)
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;  {
;    --tx_counter;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;    UDR = tx_buffer[tx_rd_index];
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;    if (++tx_rd_index == TX_BUFFER_SIZE) tx_rd_index =0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;  }
;PCODE: $00000047 VOL: 0
;}
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;
;#ifndef _DEBUG_TERMINAL_IO_
;//Write a character to a USART Transmiter buffer
;#define _ALTERNATE_PUTCHAR_
;#pragma used+
;void putchar (char c)
;{
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;  while (tx_counter == TX_BUFFER_SIZE)
;PCODE: $0000004E VOL: 0
;	c -> Y+0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;  #asm ("cli")
;PCODE: $00000053 VOL: 0
	cli
;PCODE: $00000054 VOL: 0
;  if (tx_counter || (( UCSRA & DATA_REGISTER_EMPTY) == 0))
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;  {
;    tx_buffer[tx_wr_index]=c;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;    if(++ tx_wr_index == TX_BUFFER_SIZE) tx_wr_index =0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;    ++ tx_counter;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;  }
;  else
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;  UDR =c;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;  delay_ms(10);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;  #asm("sei")
;PCODE: $00000077 VOL: 0
	sei
;PCODE: $00000078 VOL: 0
;}
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;
;#pragma used-
;#endif
;//==================================================
;//==================================================
;#include <Function.c>
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)   //Ham doc gia tri
; 0000 0046 {
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $0000007E VOL: 0
;	adc_input -> Y+0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;// Delay needed for the stabilization of the ADC input voltage
;delay_us(10);
;PCODE: $00000082 VOL: 0
;// Start the AD conversion
;ADCSRA|=0x40;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;// Wait for the AD conversion to complete
;while ((ADCSRA & 0x10)==0);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;ADCSRA|=0x10;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;return ADCW;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;}
;PCODE: $00000090 VOL: 0
;// =================================
;//thong bao khi giao dien ket noi voi phan cung
;void thongbao()
;{
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;  if (data=='b')
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;  {
;    lcd_gotoxy(0,3);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;    lcd_puts("                ");
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;    lcd_gotoxy(0,3);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;    lcd_puts("PC DisConnecting");
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;    delay_ms(1500);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;    data=' ';
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;    lcd_gotoxy(0,3);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;    lcd_puts("                ");
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;
;  }
;    else if(data=='a')
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;  {
;    lcd_gotoxy(0,3);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;    lcd_puts("                ");
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;    lcd_gotoxy(0,3);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;    lcd_puts(" PC Connecting  ");
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;    delay_ms(2000);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;    data=' ';
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;    lcd_gotoxy(0,3);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;    lcd_puts("                ");
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;  }
;
;}
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0

	.DSEG
_0x15:
	.BYTE 0x66
;// ==============================================================
;//khoi block VU
;void lcd_block(unsigned char step,unsigned int adc_value)
;{

	.CSEG
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;     if (adc_value <1) {
;PCODE: $000000D3 VOL: 0
;	step -> Y+2
;	adc_value -> Y+0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;        lcd_puts("                ");
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;     }
;     else if (adc_value >=1 && adc_value <step) {
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;        lcd_putchar(0x00);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;        lcd_puts("               ");
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;     }
;     else if (adc_value >=step && adc_value <step*2){
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;        for(i=0;i<=1;i++)
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;     }
;     else if (adc_value >=step*2 && adc_value <step*3){
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;        for(i=0;i<=2;i++)
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;            lcd_putchar(0x00);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;        lcd_puts("             ");
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;     }
;     else if (adc_value >=step*3 && adc_value <step*4){
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;        for(i=0;i<=3;i++)
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;     }
;     else if (adc_value >=step*4 && adc_value <step*5){
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;        for(i=0;i<=4;i++)
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;            lcd_putchar(0x00);
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;     }
;     else if (adc_value >=step*5 && adc_value <step*6){
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;        for(i=0;i<=5;i++)
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;     }
;     else if (adc_value >=step*6 && adc_value <step*7){
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;        for(i=0;i<=6;i++)
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;     }
;     else if (adc_value >=step*7 && adc_value <step*8){
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;        for(i=0;i<=7;i++)
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;            lcd_putchar(0x00);
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;     }
;     else if (adc_value >=step*8 && adc_value <step*9){
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;        for(i=0;i<=8;i++)
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;     }
;     else if (adc_value >=step*9 && adc_value <step*10){
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;        for(i=0;i<=9;i++)
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;     }
;     else if (adc_value >=step*10 && adc_value <step*11){
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;        for(i=0;i<=10;i++)
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;            lcd_putchar(0x00);
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;     }
;     else if (adc_value >=step*11 && adc_value <step*12){
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;         for(i=0;i<=11;i++)
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;     }
;     else if (adc_value >=step*12 && adc_value <step*13){
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;        for(i=0;i<=12;i++)
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;            lcd_putchar(0x00);
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;     }
;     else if (adc_value >=step*13 && adc_value <step*14){
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;        for(i=0;i<=13;i++)
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;        lcd_puts("  ");
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;     }
;     else if (adc_value >=step*14 && adc_value <step*15){
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;        for(i=0;i<=14;i++)
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;     }
;     else if (adc_value >=step*15){
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;        for(i=0;i<=15;i++)
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;            lcd_putchar(0x00);
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;}
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0

	.DSEG
_0x19:
	.BYTE 0x98
;// ==============================================================
;// Ham giai ma ASCII dB
;void lcd_putnum_db(unsigned int N)
;{

	.CSEG
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;     ng = N/1000;
;PCODE: $00000333 VOL: 0
;	N -> Y+0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;     tr = (N%1000)/100;
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;     ch = (N%100)/10;
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;     dv = N%10;
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;}
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;// ==============================================================
;// Ham giai ma ASCII
;void lcd_putnum(unsigned int N)
;{
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;     Tram = N/100;
;PCODE: $0000034F VOL: 0
;	N -> Y+0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;     Chuc = (N%100)/10;
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;     Donvi = N%10;
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;}
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;// ==============================================================
;//chuong tinh con hien thi gia tri am thanh len lcd
;void db_display (unsigned int nghin,unsigned int tram,unsigned int chuc,unsigned int donvi,)
;{
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;     if (nghin ==0){
;PCODE: $00000364 VOL: 0
;	nghin -> Y+6
;	tram -> Y+4
;	chuc -> Y+2
;	donvi -> Y+0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;         if (tram ==0){
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;            lcd_putchar(32);
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;            lcd_putchar(32);
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;         }
;         else{
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;            lcd_putchar(32);
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;            lcd_putchar(tram + 48);
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;         };
;PCODE: $00000376 VOL: 0
;     }
;     else{
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;         lcd_putchar(nghin + 48);
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;         lcd_putchar(tram + 48);
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;     };
;PCODE: $0000037F VOL: 0
;     lcd_putchar(chuc + 48);
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;     lcd_putchar(46);
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;     lcd_putchar(donvi + 48);
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;}
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;// ==============================================================
;//chuong trinh con hien thi delay + MaxValue dB
;void delay_display (unsigned int tram,unsigned int chuc,unsigned int donvi,)
;{
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;
;         if (tram ==0){
;PCODE: $0000038D VOL: 0
;	tram -> Y+4
;	chuc -> Y+2
;	donvi -> Y+0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;            if (chuc ==0){
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;                lcd_putchar(32);
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;                lcd_putchar(32);
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;                lcd_putchar(32);
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;            }
;            else{
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;                lcd_putchar(32);
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;                lcd_putchar(32);
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;                lcd_putchar(chuc + 48);
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;            }
;PCODE: $000003A3 VOL: 0
;         }
;         else{
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;            lcd_putchar(32);
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;            lcd_putchar(tram + 48);
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;            lcd_putchar(chuc + 48);
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;         }
;PCODE: $000003AE VOL: 0
;     lcd_putchar(donvi + 48);
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;}
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;// ==============================================================
;//chuong trinh con cai dat che do
;void mode_setting ()
;{
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;    lcd_gotoxy(0,1);                // hien thi block
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;    lcd_block(1534/16,adc_value);
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;   switch (bien_mode) {
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;//    case 0: //Screen noise (dB)-non Delay
;//    {
;//        lcd_gotoxy(0,3);
;//        lcd_puts(" Free Runing... ");
;//        break;
;//    }
;    case 0:  //Screen noise (dB)- Delay
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;    {
;        delay=luu_delay;
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;        lcd_gotoxy(0,3);
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;       switch  (bien_delay){
;PCODE: $000003C9 VOL: 0
;            case 1:
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;                    lcd_puts(" 0.5s ");
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;                    break;
;PCODE: $000003CF VOL: 0
;            case 2:
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;                    lcd_puts("   1s ");
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;                    break;
;PCODE: $000003D6 VOL: 0
;            case 3:
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;                    lcd_puts("   2s ");
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;                    break;
;PCODE: $000003DD VOL: 0
;            case 4:
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;                    lcd_puts(" Free ");
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;                    break;
;PCODE: $000003E4 VOL: 0
;       }
;PCODE: $000003E5 VOL: 0
;       lcd_gotoxy(6,3);
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;       lcd_puts("Runing... ");
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;       delay_ms(delay);
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;    }
;        break;
;PCODE: $000003EF VOL: 0
;    case 1:  //Screen Edit MaxValue
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;    {
;        lcd_gotoxy(0,3);                   //cai dat MaxValue
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;        lcd_puts(" Max Value:");
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;        lcd_putnum(bien_edit_db_value);
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;        delay_display(Tram,Chuc,Donvi);
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;        lcd_puts(" ");
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;        delay_ms(100);
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;    }
;        break;
;PCODE: $00000409 VOL: 0
;    case 2:  //Screen Baund Rate
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;    {
;     lcd_gotoxy(0,3);                      //cai dat Baud Rate
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;     lcd_puts("Baud Rate: 57600");
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;     delay_ms(100);
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;    }
;        break;
;PCODE: $00000417 VOL: 0
;    case 3:  //Screen Edit Delay
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;    {                       //hien thi delay
;       lcd_gotoxy(0,3);
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;       switch  (bien_delay){
;PCODE: $0000041F VOL: 0
;            case 1:
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;                    lcd_puts("  Delay: 0.5 s   ");
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;                    luu_delay = 400;
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;                    break;
;PCODE: $00000427 VOL: 0
;            case 2:
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;                    lcd_puts("  Delay: 1 s     ");
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;                    luu_delay = 900;
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;                    break;
;PCODE: $00000430 VOL: 0
;            case 3:
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;                    lcd_puts("  Delay: 2 s     ");
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;                    luu_delay = 1800;
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;                    break;
;PCODE: $00000439 VOL: 0
;            case 4:
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;                    lcd_puts("  Delay: Free    ");
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;                    luu_delay = 0;
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;                    break;
;PCODE: $00000442 VOL: 0
;       }
;PCODE: $00000443 VOL: 0
;       delay_ms(100);
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;    }
;        break;
;PCODE: $00000447 VOL: 0
;    case 4: //Screen Edit Correct
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;    {
;     lcd_gotoxy(0,3);                      //cai dat Baud Rate
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;     lcd_puts("  Correct:");
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;     lcd_putnum(x);
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;     delay_display(Tram,Chuc,Donvi);
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;     lcd_puts("  ");
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;     delay_ms(100);
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;    }
;        break;
;PCODE: $00000460 VOL: 0
;   };
;PCODE: $00000461 VOL: 0
;}
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0

	.DSEG
_0x95:
	.BYTE 0x9C
;// ==============================================
;void adc_convert(unsigned char channel)
;{

	.CSEG
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;    lcd_gotoxy(0,0);
;PCODE: $00000466 VOL: 0
;	channel -> Y+0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;    lcd_puts("Noise: ");
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;    lcd_gotoxy(13,0);
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;    lcd_puts("dB");
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;
;    lcd_gotoxy(0,2);
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;     if (tt==0){
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;        edit_db_value1 = bien_edit_db_value*10;
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;        adc_value = read_adc(channel)*2;                   // doc ADC kênh Channel, hi
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;
;        db_value  = ((adc_value*edit_db_value1)/(1534));  // Tính toán giá giá tri chuyen doi
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;        lcd_puts("         ");
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;     }
;     else{
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;        db_value = db_value;
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;        lcd_putchar(0xff);
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;        lcd_puts("(Latch)");                            // xuat ky tu boi den ra lcd
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;     };
;PCODE: $00000499 VOL: 0
;         // Hien thi gia tri len LCD
;         lcd_gotoxy(7,0);
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;         lcd_putnum_db(db_value);                    // giai ma
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;         db_display(ng,tr,ch,dv);                    //hien thi gia tri dB
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;}
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0

	.DSEG
_0xA4:
	.BYTE 0x1D
;//===============================================
;// truyen du lieu len may tinh
;void uart_db_tx(unsigned int db_value)
;{

	.CSEG
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;     if(connect==1)
;PCODE: $000004AD VOL: 0
;	db_value -> Y+0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;     {
;     lcd_gotoxy(13,2);
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;     for(i=0;i<=2;i++)
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;        lcd_putchar(0x7e);
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;     {
;         if (db_value <=99)
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;         {
;                putchar('\n');    // phai gui cai nay truoc giao dien moi hien thi lau cho minh thay
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;                putchar(ch +48);
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;                putchar('.');
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;                putchar(dv +48);
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;                putchar('\t');
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;
;         }
;         else if ((db_value > 99) && (db_value <= 999))
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;         {
;                putchar('\n');      // phai gui cai nay truoc giao dien moi hien thi lau cho minh thay
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;                putchar(tr +48);
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;                putchar(ch +48);
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;                putchar('.');
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;                putchar(dv +48);
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;                putchar('\t');
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;         }
;         else if ((db_value > 999))
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;         {
;                putchar('\n');     // phai gui cai nay truoc giao dien moi hien thi lau cho minh thay
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;                putchar(ng +48);    //gui ky tu nghin
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;                putchar(tr +48);     //gui ky tu tram
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
;                putchar(ch +48);    //gui ky tu chuc
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;                putchar('.');       //gui dau cham
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;                putchar(dv +48);      //gui ky tu don vi
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;                putchar('\t');
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;         }
;     }
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;     }
;PCODE: $0000050D VOL: 0
;     else
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
;     {
;        lcd_gotoxy(13,2);
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;        lcd_puts("   ");
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;     }
;PCODE: $00000517 VOL: 0
;}
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0

	.DSEG
_0xB4:
	.BYTE 0x4
;//===================================
;//Ghi ky tu dac biet vao CGRAM cua LCD
;// function used to define user characters
;void define_char(flash unsigned char *pc,unsigned char char_code)
;{

	.CSEG
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;char i,address;
;address=(char_code<<3)|0x40;
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;	*pc -> Y+3
;	char_code -> Y+2
;	i -> R17
;	address -> R16
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;for (i=0; i<8; i++) lcd_write_byte(address++,*pc++);
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)          //Ngat tran Timer 0
; 0000 004A {
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 004B // Place your code here
; 0000 004C    TCNT0=0x00;
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
; 0000 004D        if(data=='a')       // Neu data=='a' thi ket noi may tinh
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
; 0000 004E        {
; 0000 004F         connect=1;
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0000 0050        }
; 0000 0051        else if(data=='b')  // Neu data=='b' thi ngat ket noi may tinh
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
; 0000 0052        {
; 0000 0053         connect=0;
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
; 0000 0054        }
; 0000 0055        else if(data=='0') // Neu data=='1' thi delay 0.5s
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
; 0000 0056        {
; 0000 0057         bien_delay=1;
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
; 0000 0058         luu_delay = 400;
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
; 0000 0059        }
; 0000 005A        else if(data=='1')  // Neu data=='2' thi delay 1s
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
; 0000 005B        {
; 0000 005C         bien_delay=2;
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
; 0000 005D         luu_delay = 900;
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
; 0000 005E        }
; 0000 005F        else if(data=='2')  // Neu data=='3' thi delay 2s
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
; 0000 0060        {
; 0000 0061         bien_delay=3;
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
; 0000 0062         luu_delay = 1800;
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
; 0000 0063        }
; 0000 0064        else if(data=='3')  //
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
; 0000 0065        {
; 0000 0066         bien_delay=4;
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
; 0000 0067         luu_delay = 0;
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
; 0000 0068        }
; 0000 0069 
; 0000 006A        if(!MODE && MODE!=mode_old)  // Neu nha nut Mode thi tang MODE
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
; 0000 006B        {
; 0000 006C        while (!MODE && MODE!=mode_old){};
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
; 0000 006D         bien_mode++;
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
; 0000 006E         bien_mode=bien_mode>4?0:bien_mode;
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
; 0000 006F        }
; 0000 0070        mode_old = MODE;
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
; 0000 0071 }
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)    //Ngat tran Timer 2
; 0000 0074 {
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
; 0000 0075     TCNT2=0x00;
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
; 0000 0076     // Place your code here
; 0000 0077        if(!LATCH && LATCH!=latch_old)    //nut LATCH cung la nut DOWN
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
; 0000 0078        {
; 0000 0079          while (!LATCH && LATCH!=latch_old){};
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
; 0000 007A          tt=~tt;
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
; 0000 007B        }
; 0000 007C 
; 0000 007D        if(!DOWN && DOWN!=down_old)    //nut LATCH cung la nut DOWN
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
; 0000 007E        {
; 0000 007F          while (!DOWN && DOWN!=down_old){};
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
; 0000 0080 
; 0000 0081          if (bien_mode==1)    //giam gia tri do lon nhat
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
; 0000 0082          {
; 0000 0083            bien_edit_db_value -= 10;
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
; 0000 0084            bien_edit_db_value=bien_edit_db_value<20?140:bien_edit_db_value;
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
; 0000 0085          }
; 0000 0086 
; 0000 0087          else if (bien_mode==3)   //giam gia tri delay
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
; 0000 0088          {
; 0000 0089            bien_delay --;
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
; 0000 008A            //bien_delay=bien_delay<0?9:bien_delay;
; 0000 008B            if (bien_delay <1) bien_delay=4;
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0000 008C            truyen_delay = bien_delay + 63;
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
; 0000 008D            putchar(truyen_delay);
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
; 0000 008E          }
; 0000 008F 
; 0000 0090         else if (bien_mode==4)    //giam gia tri do lon nhat
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
; 0000 0091          {
; 0000 0092            x --;
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
; 0000 0093            x=x<0?310:x;
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
; 0000 0094          }
; 0000 0095        }
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
; 0000 0096 
; 0000 0097        if(!UP && UP !=up_old)
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
; 0000 0098        {
; 0000 0099         while (!UP && UP!=up_old){};
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
; 0000 009A          if (bien_mode==0)
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
; 0000 009B          {
; 0000 009C             putchar(truyen_delay);
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
; 0000 009D             connect = ~ connect;
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
; 0000 009E          }
; 0000 009F          else if (bien_mode==1)     //tang gia tri do lon nhat
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
; 0000 00A0          {
; 0000 00A1            bien_edit_db_value += 10;
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
; 0000 00A2            bien_edit_db_value=bien_edit_db_value>140?20:bien_edit_db_value;
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
; 0000 00A3          }
; 0000 00A4          else if (bien_mode==3)   //tang gia tri delay
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
; 0000 00A5          {
; 0000 00A6            bien_delay ++;
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
; 0000 00A7            //bien_delay=bien_delay>9?0:bien_delay;
; 0000 00A8            if (bien_delay>4) bien_delay=1;
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
; 0000 00A9            truyen_delay = bien_delay + 63;
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
; 0000 00AA            putchar(truyen_delay);
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
; 0000 00AB          }
; 0000 00AC         else if (bien_mode==4)    //giam gia tri do lon nhat
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
; 0000 00AD          {
; 0000 00AE            x ++;
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
; 0000 00AF            x=x>310?0:x;
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
; 0000 00B0          }
; 0000 00B1        }
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
; 0000 00B2 
; 0000 00B3        up_old = UP;
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
; 0000 00B4        down_old = DOWN;
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
; 0000 00B5        latch_old = LATCH;
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
; 0000 00B6 }
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;void main(void)
; 0000 00B8 {
;PCODE: $000006A8 VOL: 0
; 0000 00B9     #include <ConfigSet.c>
;// Declare your local variables here
;
;// Input/Output Ports initialization
;// Port B initialization
;// Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
;// State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
;PORTB=0x06;
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
;DDRB=0x01;           // =0xFF la ngo ra
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;
;// Port C initialization
;// Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
;// State6=T State5=T State4=T State3=T State2=T State1=T State0=T
;PORTC=0xc0;
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
;DDRC=0x30;         // =0x00 la ngo vao
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;
;// Port D initialization
;// Func7=In Func6=In Func5=In Func4=Out Func3=Out Func2=Out Func1=In Func0=In
;// State7=P State6=P State5=P State4=0 State3=0 State2=0 State1=T State0=T
;PORTD=0x0c;
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;DDRD=0xf0;
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;
;// Timer/Counter 0 initialization
;// Clock source: System Clock
;// Clock value: 1000.000 kHz
;TCCR0=0x02;
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;TCNT0=0x00;
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;// Timer/Counter 2 initialization
;// Clock source: System Clock
;// Clock value: 1000.000 kHz
;// Mode: Normal top=0xFF
;// OC2 output: Disconnected
;ASSR=0x00;
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;TCCR2=0x02;
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
;TCNT2=0x00;
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;OCR2=0x00;
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;
;// Timer(s)/Counter(s) Interrupt(s) initialization
;TIMSK=0x41;
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;
;// USART initialization
;// Communication Parameters: 8 Data, 1 Stop, No Parity
;// USART Receiver: On
;// USART Transmitter: On
;// USART Mode: Asynchronous
;// USART Baud Rate: 9600
;UCSRA=0x00;
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;UCSRB=((1<<RXCIE)|(1<<RXEN)|(1<<TXEN));        //cho phep truyen/nhan UART
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;UCSRC=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);        //quy dinh do dai du lieu = 9 bit = 8 data + 1 stop
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
;UBRRH=0x00;
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;//UBRRL=6;      // Toc do Baud = 76800 bps
;UBRRL=8;      // Toc do Baud = 57600 bps
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
;//UBRRL=25;      // Toc do Baud = 19200 bps
;//UBRRL=51;     //Toc do Baud = 9600 bps
;
;// ADC initialization
;ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;ADCSRA |= (1<<ADEN)|(1<<ADPS0);
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;// Characters/line: 16
;lcd_init(16);
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;
; 0000 00BA     // Global enable interrupts
; 0000 00BB     #asm("sei")
;PCODE: $000006D4 VOL: 0
	sei
;PCODE: $000006D5 VOL: 0
; 0000 00BC     lcd_gotoxy(2,0);
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
; 0000 00BD     lcd_puts("NOISE LEVEL");
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
; 0000 00BE     lcd_gotoxy(5,1);
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
; 0000 00BF     lcd_puts("METER");
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
; 0000 00C0     lcd_gotoxy(2,3);
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
; 0000 00C1     lcd_puts("Liem Nguyen");
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
; 0000 00C2     delay_ms(2500);
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
; 0000 00C3     lcd_clear();
;PCODE: $000006ED VOL: 0
; 0000 00C4     define_char(character_0,0x00);
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
; 0000 00C5 
; 0000 00C6     while (1)
;PCODE: $000006F2 VOL: 0
; 0000 00C7     {
; 0000 00C8       // Place your code here
; 0000 00C9       thongbao();                 //Thong bao ket noi voi may tinh
;PCODE: $000006F3 VOL: 0
; 0000 00CA       adc_convert(1);             //chuong trinh con chuyen doi ADC kenh 0, doc dB
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
; 0000 00CB       mode_setting();             //chuong trinh con cai dat che do
;PCODE: $000006F6 VOL: 0
; 0000 00CC       uart_db_tx(db_value);       //chuong trinh con truyen du lieu len may tinh
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
; 0000 00CD       truyen_data=1;
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
; 0000 00CE       delay_ms(50);
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
; 0000 00CF     };
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
; 0000 00D0 }
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0

	.DSEG
_0x100:
	.BYTE 0x1E
